#!/bin/bash
# Set the path to the exploitables folder
script_path=$(dirname "$(readlink -f "$0")")
parent_path=$(dirname "$script_path")
exploitable_path="$parent_path/contractdb/contracts/exploitable"
#uncategorized_path="$parent_path/contractdb/contracts/uncategorized"
save_path="$parent_path/contractdb/contracts/exploitable/autofixed"
save_path="/home/$(whoami)/Documents/smartcontracts/contractdb/contracts/exploitable/autofixed"
#uncategorized_save_path="/home/$(whoami)/Documents/smartcontracts/contractdb/contracts/uncategorized/autofixed"
# For each folder in exploitable make a list of each subdirectories files ignore dotfiles and name each list from a subdirectory with the name of the subdirectory


# Initialize empty lists to store solhint issues and descriptions
solhint_issues=()
solhint_issue_descriptions=()

create() {
    dir_path=$(dirname $1)
    mkdir -p -- $dir_path;
}
#path=$uncategorized_path
path=$exploitable_path
declare -A files_by_dir

for dir in $(find $path -type d); do
    dir_name=$(basename $dir)
    files_by_dir[$dir_name]=$(ls $dir)
done

for key in "${!files_by_dir[@]}"; do
    # Check if the directory is named TD, UcC, TO, DC or RE
    if [[ $key == "TD" || $key == "UcC" || $key == "TO" || $key == "DC" || $key == "RE" ]]; then


        # echo "$key: ${files_by_dir[$key]}"
        for file in ${files_by_dir[$key]}; do
            #echo "File: $file"
            contract_address=$(echo $file | gawk -F'_' '{print $NF}' | cut -c1-42)
            echo "Contract Address: $contract_address"
            #echo "Contract Address: $contract_address"
            output_path="$save_path/${key}_report_fixed.csv"
            solhint_output=$(solhint --fix --config "${parent_path}/solhintconfigs/.solhint${key}.json" "$exploitable_path/$key/$file")
            solhint_output=$(echo "$solhint_output" | tail -n +3)

            while read -r line; do
                # skip blank lines
                if [ -z "$line" ]; then
                    break
                fi
                # Remove whitespaces and store substring before ":" in variable
                solhint_issue=$(echo $line | tr -d ' ' | cut -d ':' -f1)

                # Append the solhint issue to the solhint_issues list
                solhint_issues+=($solhint_issue)

                # Store substring after ":" in variable
                remaining=$(echo $line | cut -d ':' -f2)

                # Append the remaining to the solhint_issue_descriptions list
                solhint_issue_descriptions+=($remaining)
            done <<< "$solhint_output"
            echo "$contract_address,\"[${solhint_issues[@]}]\",\"[${solhint_issue_descriptions[@]}]\"" >> $output_path
            solhint_issues=()
            solhint_issue_descriptions=()
        done
    fi



done
