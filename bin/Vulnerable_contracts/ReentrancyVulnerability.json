{
    "contractName": "ReentrancyVulnerability",
    "abi": [
        {
            "inputs": [],
            "name": "balance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/nikolas/Documents/smartcontracts/Vulnerable_contracts/ReentrancyVulnerability.sol\":\"ReentrancyVulnerability\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/nikolas/Documents/smartcontracts/Vulnerable_contracts/ReentrancyVulnerability.sol\":{\"keccak256\":\"0x41ed91b689f774567948cc3158aaae89e4f504b5ccf0f46c174ddaa4bdb14e6d\",\"urls\":[\"bzz-raw://e670ba8d7026941f01bf2b3754e9536ff2be438e38b7b2f53b470ac006aa2c96\",\"dweb:/ipfs/QmR2q5jyYgJYj2hdcWLn146HyBQwZ48n6whMxodpAeHY3g\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b5061018b806100206000396000f3fe6080604052600436106100345760003560e01c80633ccfd60b14610039578063b69ef8a814610050578063d0e30db014610078575b600080fd5b34801561004557600080fd5b5061004e610080565b005b34801561005c57600080fd5b5061006660005481565b60405190815260200160405180910390f35b61004e610116565b600080546040513391908381818185875af1925050503d80600081146100c2576040519150601f19603f3d011682016040523d82523d6000602084013e6100c7565b606091505b505090508061010f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640160405180910390fd5b5060008055565b34600080828254610127919061012e565b9091555050565b8082018082111561014f57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220e2a21a2145ed8337883c3cb63cb114bd0698b6d42d75f81b60d6f6b4e332493864736f6c63430008110033",
    "deployedBytecode": "6080604052600436106100345760003560e01c80633ccfd60b14610039578063b69ef8a814610050578063d0e30db014610078575b600080fd5b34801561004557600080fd5b5061004e610080565b005b34801561005c57600080fd5b5061006660005481565b60405190815260200160405180910390f35b61004e610116565b600080546040513391908381818185875af1925050503d80600081146100c2576040519150601f19603f3d011682016040523d82523d6000602084013e6100c7565b606091505b505090508061010f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640160405180910390fd5b5060008055565b34600080828254610127919061012e565b9091555050565b8082018082111561014f57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220e2a21a2145ed8337883c3cb63cb114bd0698b6d42d75f81b60d6f6b4e332493864736f6c63430008110033",
    "sourceMap": "27:329:0:-:0;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "27:329:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;174:178;;;;;;;;;;;;;:::i;:::-;;66:19;;;;;;;;;;;;;;;;;;;160:25:1;;;148:2;133:18;66:19:0;;;;;;;93:71;;;:::i;174:178::-;214:12;256:7;;232:36;;:10;;256:7;214:12;232:36;214:12;232:36;256:7;232:10;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:55;;;286:7;278:36;;;;-1:-1:-1;;;278:36:0;;608:2:1;278:36:0;;;590:21:1;647:2;627:18;;;620:30;-1:-1:-1;;;666:18:1;;;659:46;722:18;;278:36:0;;;;;;;;-1:-1:-1;334:1:0;324:11;;174:178::o;93:71::-;148:9;137:7;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;93:71:0:o;751:222:1:-;816:9;;;837:10;;;834:133;;;889:10;884:3;880:20;877:1;870:31;924:4;921:1;914:15;952:4;949:1;942:15;834:133;751:222;;;;:::o",
    "sourcePath": "/home/nikolas/Documents/smartcontracts/Vulnerable_contracts/ReentrancyVulnerability.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.17+commit.8df45f5f"
    },
    "ast": {
        "absolutePath": "/home/nikolas/Documents/smartcontracts/Vulnerable_contracts/ReentrancyVulnerability.sol",
        "exportedSymbols": {
            "ReentrancyVulnerability": [
                36
            ]
        },
        "id": 37,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.7",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:0"
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "ReentrancyVulnerability",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 36,
                "linearizedBaseContracts": [
                    36
                ],
                "name": "ReentrancyVulnerability",
                "nameLocation": "36:23:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "b69ef8a8",
                        "id": 3,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "78:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "66:19:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 2,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "66:4:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 11,
                            "nodeType": "Block",
                            "src": "127:37:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 9,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 6,
                                            "name": "balance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3,
                                            "src": "137:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 7,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "148:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 8,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "152:5:0",
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "148:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "137:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 10,
                                    "nodeType": "ExpressionStatement",
                                    "src": "137:20:0"
                                }
                            ]
                        },
                        "functionSelector": "d0e30db0",
                        "id": 12,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "deposit",
                        "nameLocation": "102:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "109:2:0"
                        },
                        "returnParameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "127:0:0"
                        },
                        "scope": 36,
                        "src": "93:71:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 34,
                            "nodeType": "Block",
                            "src": "203:149:0",
                            "statements": [
                                {
                                    "assignments": [
                                        16,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 16,
                                            "mutability": "mutable",
                                            "name": "success",
                                            "nameLocation": "219:7:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 34,
                                            "src": "214:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 15,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "214:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null
                                    ],
                                    "id": 24,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 22,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "265:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                        "typeString": "literal_string \"\""
                                                    }
                                                ],
                                                "expression": {
                                                    "expression": {
                                                        "id": 17,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "232:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 18,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "236:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "232:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 19,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "243:4:0",
                                                "memberName": "call",
                                                "nodeType": "MemberAccess",
                                                "src": "232:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                }
                                            },
                                            "id": 21,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                                "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                                {
                                                    "id": 20,
                                                    "name": "balance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3,
                                                    "src": "256:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "src": "232:32:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 23,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "232:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "213:55:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 26,
                                                "name": "success",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "286:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5472616e73666572206661696c65642e",
                                                "id": 27,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "295:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                                                    "typeString": "literal_string \"Transfer failed.\""
                                                },
                                                "value": "Transfer failed."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                                                    "typeString": "literal_string \"Transfer failed.\""
                                                }
                                            ],
                                            "id": 25,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "278:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 28,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "278:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 29,
                                    "nodeType": "ExpressionStatement",
                                    "src": "278:36:0"
                                },
                                {
                                    "expression": {
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 30,
                                            "name": "balance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3,
                                            "src": "324:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 31,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "334:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "324:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 33,
                                    "nodeType": "ExpressionStatement",
                                    "src": "324:11:0"
                                }
                            ]
                        },
                        "functionSelector": "3ccfd60b",
                        "id": 35,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "183:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "191:2:0"
                        },
                        "returnParameters": {
                            "id": 14,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "203:0:0"
                        },
                        "scope": 36,
                        "src": "174:178:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 37,
                "src": "27:329:0",
                "usedErrors": []
            }
        ],
        "src": "0:356:0"
    },
    "functionHashes": {
        "balance()": "b69ef8a8",
        "deposit()": "d0e30db0",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "79000",
            "executionCost": "129",
            "totalCost": "79129"
        },
        "external": {
            "balance()": "2283",
            "deposit()": "24441",
            "withdraw()": "infinite"
        }
    }
}